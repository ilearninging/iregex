{"id":"160467","urlID":"3a7pp","name":"yoe21c","description":"yoe21c","content":"\/*\n * Copyright [2013] [Pascal Lombard]\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *        http:\/\/www.apache.org\/licenses\/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n *\/\n\npackage org.elasticsearch.river.subversion;\n\nimport com.google.common.base.Optional;\nimport com.google.common.collect.Lists;\nimport com.google.common.hash.HashFunction;\nimport com.google.common.hash.Hashing;\nimport org.elasticsearch.ExceptionsHelper;\nimport org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;\nimport org.elasticsearch.action.bulk.BulkRequestBuilder;\nimport org.elasticsearch.action.bulk.BulkResponse;\nimport org.elasticsearch.action.get.GetResponse;\nimport org.elasticsearch.client.Client;\nimport org.elasticsearch.cluster.block.ClusterBlockException;\nimport org.elasticsearch.common.inject.Inject;\nimport org.elasticsearch.common.util.concurrent.EsExecutors;\nimport org.elasticsearch.common.xcontent.XContentBuilder;\nimport org.elasticsearch.common.xcontent.support.XContentMapValues;\nimport org.elasticsearch.index.get.GetField;\nimport org.elasticsearch.indices.IndexAlreadyExistsException;\nimport org.elasticsearch.river.AbstractRiverComponent;\nimport org.elasticsearch.river.River;\nimport org.elasticsearch.river.RiverName;\nimport org.elasticsearch.river.RiverSettings;\nimport org.elasticsearch.river.subversion.crawler.Parameters;\nimport org.elasticsearch.river.subversion.crawler.SubversionCrawler;\nimport org.elasticsearch.river.subversion.mapping.IndexedRevisionMapping;\nimport org.elasticsearch.river.subversion.mapping.SubversionDocumentMapping;\nimport org.elasticsearch.river.subversion.mapping.SubversionRevisionMapping;\nimport org.elasticsearch.river.subversion.type.SubversionDocument;\nimport org.elasticsearch.river.subversion.type.SubversionRevision;\nimport org.elasticsearch.threadpool.ThreadPool;\n\nimport java.io.IOException;\nimport java.net.URL;\nimport java.util.List;\nimport java.util.Map;\n\nimport static org.elasticsearch.client.Requests.indexRequest;\nimport static org.elasticsearch.common.xcontent.XContentFactory.jsonBuilder;\n\n\/**\n * River for SVN repositories\n *\/\npublic class SubversionRiver extends AbstractRiverComponent implements River {\n\n    private Client client;\n    @SuppressWarnings(\"unused\")\n    private ThreadPool threadPool;\n\n    private String indexName = null;\n    private String typeName = null;\n    private String repos;\n    private Parameters crawlerParameters;\n    private int updateRate;\n    private int bulkSize;\n    private long indexedRevision;\n    private String indexedRevisionID;\n\n    private volatile boolean closed;\n    private volatile Thread indexerThread;\n\n    private static final HashFunction hf = Hashing.md5();\n    private static final Long NOT_INDEXED_REVISION = 0L;\n    private static final Long INDEX_HEAD_REVISION = -1L;\n\n    @Inject\n    protected SubversionRiver(RiverName riverName,\n                              RiverSettings settings,\n                       ","weightedVote":"2.5","numVotes":"0","author":"","community":"1","dateAdded":"2015-01-15","pattern":"(import)\\s(.+)","replace":"","state":""}