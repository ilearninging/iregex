{"id":"173285","urlID":"3bdbf","name":"Object Literal Name-Values","description":"Matches javascript object literal syntax by matching name-value pairs (strings, numbers, booleans, arrays) but not (arrays of arrays or nested objects)","content":"\/\/ String name-value\n{\"lorem\": \"ipsum\"}\n{ \"lorem\":\"ipsum\"}\n{\t\"lorem\":\t \"ipsum\"}\n\n\/\/ String literals name-value\n{\"lorem\":\"ipsum sed'\", \"dolo'r\": \"s[e]d\", \"u{t}\": \"lorem ipsum\"}\n\n\/\/ Special characters\n{\"id\u00d3\":\"non:value\",\"id\u2030\": 'non{key'}\n{\"id\u00d3\":\"val u\u00c1e3$\",\"id\u2030\": '$v%al:ue4$$'}\n\n\/\/ Non-quoted names\n{lorem: \"ipsum\"}\n\n\/\/ Matching quotes\n{\"l'orem\": 'ip\"sum', \"s'e'd\": 'u\"lorem\"t'}\n\n\/\/ Number values\n{\"lorem\": 123, \"sed\": '0'}\n{dolor: 321.0e1, dolores : -321.1e1, eius : -31 }\n\n\/\/ Array (single-level)\n{\"list1\": [], \"list2\": [1,2,3], \"list3\": [\"1\", \"2\", \"3\"]}\n\n\/\/ Null and booleans\n{\"name1\": null, \"name2\": true, \"name3\": false}\n","weightedVote":"3.26389","numVotes":"1","author":"Henry Tseng","community":"1","dateAdded":"2015-07-16","pattern":"\/([,{]\\s*((\"|')(.*?)\\3|\\w*)|(:\\s*([+-]?(?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*)(?:[eE][+-]?\\d+)?|true|false|null|(\"|')(.*?)\\7|\\[[^\\]]*\\])))\/g","replace":"","state":"{\"substEnabled\":false}"}