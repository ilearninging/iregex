{"id":"163507","urlID":"3agmp","name":"dataList","description":"","content":"TranslationUnitDecl 0x339c0f0 <<invalid sloc>> <invalid sloc>\n|-TypedefDecl 0x339c3e0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'\n|-FunctionDecl 0x339c4e0 <ModelChecker\\unitary_tests\\Model_checker\\arith_pointer.cpp:1:1, line:3:1> line:1:5 f 'int (int, int)'\n| |-ParmVarDecl 0x339c420 <col:7, col:11> col:11 a 'int'\n| |-ParmVarDecl 0x339c460 <col:14, col:18> col:18 b 'int'\n| `-CompoundStmt 0x339c588 <col:20, line:3:1>\n|   `-ReturnStmt 0x339c578 <line:2:2, col:9>\n|     `-IntegerLiteral 0x339c558 <col:9> 'int' 1\n`-FunctionDecl 0x339c690 <line:5:1, line:24:1> line:5:5 main 'int (int, char **)'\n  |-ParmVarDecl 0x339c5b0 <col:10, col:14> col:14 argc 'int'\n  |-ParmVarDecl 0x339c610 <col:20, col:27> col:27 argv 'char **'\n  `-CompoundStmt 0x33e0b88 <col:33, line:24:1>\n    |-DeclStmt 0x339c7d0 <line:6:2, col:12>\n    | |-VarDecl 0x339c740 <col:2, col:7> col:7 used p 'int *'\n    | `-VarDecl 0x339c790 <col:2, col:11> col:11 q 'int *'\n    |-BinaryOperator 0x339c858 <line:7:2, col:10> 'int *' lvalue '='\n    | |-DeclRefExpr 0x339c7e0 <col:2> 'int *' lvalue Var 0x339c740 'p' 'int *'\n    | `-BinaryOperator 0x339c840 <col:6, col:10> 'int *' '+'\n    |   |-ImplicitCastExpr 0x339c830 <col:6> 'int *' <LValueToRValue>\n    |   | `-DeclRefExpr 0x339c7f8 <col:6> 'int *' lvalue Var 0x339c740 'p' 'int *'\n    |   `-IntegerLiteral 0x339c810 <col:10> 'int' 1\n    |-DeclStmt 0x339c8d0 <line:9:2, col:14>\n    | `-VarDecl 0x339c8a0 <col:2, col:13> col:13 used s 'const int *'\n    |-BinaryOperator 0x339c9d8 <line:10:2, col:18> 'const int *' lvalue '='\n    | |-DeclRefExpr 0x339c8e0 <col:2> 'const int *' lvalue Var 0x339c8a0 's' 'const int *'\n    | `-ConditionalOperator 0x339c9b8 <col:6, col:18> 'const int *'\n    |   |-ImplicitCastExpr 0x339c998 <col:6> '_Bool' <IntegralToBoolean>\n    |   | `-IntegerLiteral 0x339c8f8 <col:6> 'int' 0\n    |   |-ImplicitCastExpr 0x339c9a8 <col:10> 'const int *' <NullToPointer>\n    |   | `-IntegerLiteral 0x339c918 <col:10> 'int' 0\n    |   `-BinaryOperator 0x339c980 <col:14, col:18> 'const int *' '+'\n    |     |-ImplicitCastExpr 0x339c970 <col:14> 'const int *' <LValueToRValue>\n    |     | `-DeclRefExpr 0x339c938 <col:14> 'const int *' lvalue Var 0x339c8a0 's' 'const int *'\n    |     `-IntegerLiteral 0x339c950 <col:18> 'int' 1\n    |-DeclStmt 0x339ca60 <line:12:2, col:13>\n    | `-VarDecl 0x339ca00 <col:2, col:12> col:8 used f 'float' cinit\n    |   `-ImplicitCastExpr 0x339ca50 <col:12> 'float' <IntegralToFloating>\n    |     `-IntegerLiteral 0x339ca30 <col:12> 'int' 3\n    |-CompoundAssignOperator 0x339cab8 <line:14:2, col:7> 'float' lvalue '+=' ComputeLHSTy='float' ComputeResultTy='float'\n    | |-DeclRefExpr 0x339ca70 <col:2> 'float' lvalue Var 0x339ca00 'f' 'float'\n    | `-ImplicitCastExpr 0x339caa8 <col:7> 'float' <IntegralToFloating>\n    |   `-IntegerLiteral 0x339ca88 <col:7> 'int' 5\n    |-DeclStmt 0x339ccb8 <line:16:2, col:27>\n    | `-VarDecl 0x339cb20 <col:2, col:26> col:9 used arr 'double [4]' cinit\n    |   `-InitListExpr 0x339cc08 <col:17, col:26> 'double [4]'\n    |     |-ImplicitCastExpr 0x339cc30 <col:19> 'double' <IntegralToFloating>\n    |   ","weightedVote":"2.5","numVotes":"0","author":"","community":"1","dateAdded":"2015-02-26","pattern":"<.+>|('[^']+'|[^\\s']+)+","replace":"","state":"{\"substEnabled\":false}"}