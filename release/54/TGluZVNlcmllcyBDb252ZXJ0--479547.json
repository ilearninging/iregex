{"id":"168552","urlID":"3avfo","name":"LineSeries Convert","description":"","content":"LineSeriesOld(col, legend, color, line, symbol, custom)\n\nChart trpmPupTrpmChart = new Chart();\ntrpmPupTrpmChart.Name = \"TRPM PUP\/TRPM\";\ntrpmPupTrpmChart.Xaxis.Add(new LineSeries(\"DTIME\"));\ntrpmPupTrpmChart.Yaxis.Add(new LineSeries(\"MAXMTRCUR\", \"Max Motor Current [mA]\", \"Red\", \"Line\", null, \"New YAxis (R0)\"));\ntrpmPupTrpmChart.Yaxis.Add(new LineSeriesOld(\"MAXMTRCUR\", \"Max Motor Current [mA]\", \"Red\", \"Line\", null, \"New YAxis (R0)\"));\ntrpmPupTrpmChart.Yaxis.Add(new LineSeriesOld(\"PUP\", null, \"Blue\", \"Scattered\", \"Circle\", \"Special1 (TRPM)\"));\ntrpmPupTrpmChart.Yaxis.Add(new LineSeriesOld(\"TRPM\", null, \"Black\", \"Line\", \"Circle\", null));\ntoolData.ChartList.Add(trpmPupTrpmChart);\n\nChart collarRpmBitshaftRpm = new Chart();\ncollarRpmBitshaftRpm.Name = \"Collar RPM & Bitshaft RPM\";\ncollarRpmBitshaftRpm.Xaxis.Add(new LineSeriesOld(\"DTIME\", null, null, \"Line\", null, null, null, null));\ncollarRpmBitshaftRpm.Yaxis.Add(new LineSeriesOld(\"CRPM\", null, \"Magenta\", \"Line\", null, null, \"0\", \"400\"));\ncollarRpmBitshaftRpm.Yaxis.Add(new LineSeriesOld(\"BSRPM\", null, \"Blue\", \"Line\", null, null, \"0\", \"400\"));\ntoolData.ChartList.Add(collarRpmBitshaftRpm);\n\nChart toolFace = new Chart();\ntoolFace.Name = \"Target Toolface\";\ntoolFace.Xaxis.Add(new LineSeries(\"DTIME\"));\ntoolFace.Yaxis.Add(new LineSeriesOld(\"TFA\", null, \"Blue\", \"Scattered\", \"Cross\", null));\ntoolFace.Yaxis.Add(new LineSeriesOld(\"TTF\", null, \"Green\", \"Scattered\", \"Cross\", null));\ntoolData.ChartList.Add(toolFace);\n\nChart motorPosition = new Chart();\nmotorPosition.Name = \"Motor Position \/ IVT Ratio\";\nmotorPosition.Xaxis.Add(new LineSeriesOld(\"DTIME\", null, null, \"Line\", null, null, null, null));\nmotorPosition.Yaxis.Add(new LineSeriesOld(\"MTRPOS\", null, \"Red\", \"Line\", null, \"New YAxis (R0)\"));\nmotorPosition.Yaxis.Add(new LineSeriesOld(\"IVTRATIO\", null, \"Green\", \"Line\", null, null));\nmotorPosition.Yaxis.Add(new LineSeriesOld(\"PUP\", null, \"Blue\", \"Scattered\", \"Circle\", \"Special1 (MTRPOS)\"));\ntoolData.ChartList.Add(motorPosition);\n\nwindowList.Add(toolData);\n\n\n\/\/ Create a new Window object\nWindow torsionalVibration = new Window(\"Torsional Vibration\");\n\n\/\/ Create a new chart object\nChart ssFreq = new Chart();\nssFreq.Name = \"Stick-Slip Frequency\";\nssFreq.Xaxis.Add(new LineSeries(\"DTIME\"));\nssFreq.Yaxis.Add(new LineSeriesOld(\"SSFREQ\", null, \"Maroon\", \"Line\", null, null));\ntorsionalVibration.ChartList.Add(ssFreq);\n\nChart ssAmp = new Chart();\nssAmp.Name = \"Stick-Slip Amplitude\";\nssAmp.Xaxis.Add(new LineSeries(\"DTIME\"));\nssAmp.Yaxis.Add(new LineSeriesOld(\"SSPPAMP\", null, \"Blue\", \"Line\", null, null));\ntorsionalVibration.ChartList.Add(ssAmp);\n\nwindowList.Add(torsionalVibration);\n\n\n\/\/ Create a new Window object\nWindow electricalSystem = new Window(\"Electrical System\");\n\n\/\/ Create the chart object\nChart electData = new Chart();\nelectData.Name = \"Electrical Data\";\nelectData.Xaxis.Add(new LineSeries(\"DTIME\"));\nelectData.Yaxis.Add(new LineSeriesOld(\"VBUS\", null, \"Brown\", \"Line\", null, null));\nelectData.Yaxis.Add(new ","weightedVote":"2.5","numVotes":"0","author":"WSNHapps","community":"1","dateAdded":"2015-05-08","pattern":"LineSeriesOld\\((.+?),\\s*(.+?),\\s*(.+?),\\s*(.+?),\\s*(.+?),\\s*(.+?)\\)\/igm","replace":"","state":"{\"substEnabled\":true}"}