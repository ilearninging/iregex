{"id":"179407","urlID":"3bv9d","name":"zajoreto3","description":"","content":"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Text.RegularExpressions;\nusing System.Threading.Tasks;\n\nnamespace Problem_4\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var data = new Dictionary<string, Dictionary<string,int>>();\n\n            var currentLine = Console.ReadLine();\n            StringBuilder sb = new StringBuilder();\n\n            while (currentLine != \"End\")\n            {\n                sb.AppendLine(currentLine);\n                currentLine = Console.ReadLine();\n            }\n\n            var text = sb.ToString();\n            Regex pattern = new Regex(@\"(\\w+\\s*\\w*)\\s@(\\w+\\s*\\w*)\\s(\\d+)\\s(\\d+)\");\n            MatchCollection matches = pattern.Matches(text);\n            foreach (Match match in matches)\n            {\n                var performer = match.Groups[1].Value;\n                var venue = match.Groups[2].Value;\n                var price = match.Groups[3].Value;\n                var ticketsSold = match.Groups[4].Value;\n                var money = int.Parse(price) * int.Parse(ticketsSold);\n               \n                if (!data.ContainsKey(venue))\n                {\n                    data.Add(venue, new Dictionary<string, int>());\n                }\n                if (!data[venue].ContainsKey(performer))\n                {\n                    data[venue].Add(performer, money);\n\n                }\n                else\n                {\n                    data[venue][performer] += money;\n                }\n\n                \n            }\n\n\n\n            foreach (var keyValuePair in data)\n            {\n                Console.WriteLine(\"{0}\",\n                    keyValuePair.Key);\n                foreach (var pair in keyValuePair.Value.OrderByDescending(p => p.Value))\n                {\n                    Console.WriteLine(\"#  {0} -> {1}\", pair.Key, pair.Value);\n                }\n            }\n            \n\n\n\n        }\n    }\n}\n","weightedVote":"2.5","numVotes":"0","author":"","community":"1","dateAdded":"2015-10-11","pattern":"\/(\\w+\\s*\\w*)\\s@(\\w+\\s*\\w*)\\s(\\d+)\\s(\\d+)\/g","replace":"","state":"{\"substEnabled\":false}"}